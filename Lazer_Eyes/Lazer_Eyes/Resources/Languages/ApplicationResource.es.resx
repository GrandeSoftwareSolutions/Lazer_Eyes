<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlertS" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="AnswerFive" xml:space="preserve">
    <value>Las notificaciones están configuradas inicialmente como predeterminadas. Puede personalizarlos yendo a la página de Notificaciones. Puede cambiar la intensidad y el volumen del sonido. y la intensidad de la vibración o apagar. Puede optar por deshabilitar las notificaciones por poca luz.</value>
  </data>
  <data name="AnswerFour" xml:space="preserve">
    <value>Tu puedes personalizar los configuraciones yendo al la pagina general. Puedes elegir los unidades de distancia que prefieres, eliga a que distancia que se le notifique un obstaculo estableciendo un umbral de distancia.</value>
  </data>
  <data name="AnswerOne" xml:space="preserve">
    <value>Recommendamos que tu visitas un especialista de orientacion y mobilidad antes de usar el aplicacion. El aplicacion requiere que apuntes la camera en el direccion en la que caminas notificara sobre varios objectos en tu camino y tu distancia.</value>
  </data>
  <data name="AnswerSix" xml:space="preserve">
    <value>Lazer Eyes utiliza LIDAR y, por lo tanto, necesitara modelos de iPhone especificos como iPhone 13 Pro y Pro Max, junto con el iPad pro de generacion 5.0.</value>
  </data>
  <data name="AnswerThree" xml:space="preserve">
    <value>Por defecto escucharas un sonido, sentir virbracion y tener visuales en la pagina principal de el aplicaccion.</value>
  </data>
  <data name="AnswerTwo" xml:space="preserve">
    <value>Recibira advertencias para objectos en tu camino y niveles de luz baja basado en sus ajustes.</value>
  </data>
  <data name="Auditory" xml:space="preserve">
    <value>Auditivo</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Atrás</value>
  </data>
  <data name="Danger" xml:space="preserve">
    <value>Peligro</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>Defecto</value>
  </data>
  <data name="DistanceT" xml:space="preserve">
    <value>Limites de Distancia:</value>
  </data>
  <data name="DistanceU" xml:space="preserve">
    <value>Unidades de Distancia</value>
  </data>
  <data name="Feet" xml:space="preserve">
    <value>Pies</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="GoodLight" xml:space="preserve">
    <value>Calidad de iluminación: Buena</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Ayuda</value>
  </data>
  <data name="Intensity" xml:space="preserve">
    <value>Intensidad</value>
  </data>
  <data name="LowL" xml:space="preserve">
    <value>Luz Baja</value>
  </data>
  <data name="LowLThresh" xml:space="preserve">
    <value>Limites de Luz Baja (Lúmenes)</value>
  </data>
  <data name="Meters" xml:space="preserve">
    <value>Metros</value>
  </data>
  <data name="Notifications" xml:space="preserve">
    <value>Notificaciones</value>
  </data>
  <data name="PoorLight" xml:space="preserve">
    <value>Calidad de iluminación: Pobre</value>
  </data>
  <data name="PrivacyAnswer" xml:space="preserve">
    <value>LazerEyes no recoges ninguna informacion personal. No utilizamos ningun software de seguimiento.</value>
  </data>
  <data name="PrivacyPolicy" xml:space="preserve">
    <value>Politica de privacidad</value>
  </data>
  <data name="QuestionFive" xml:space="preserve">
    <value>Como cambio lose notificaciones que recibire?</value>
  </data>
  <data name="QuestionFour" xml:space="preserve">
    <value>Como cambio los configuraciones?</value>
  </data>
  <data name="QuestionOne" xml:space="preserve">
    <value>Como uso LazerEyes?</value>
  </data>
  <data name="QuestionSix" xml:space="preserve">
    <value>Que requitos necesito para usar las funcionalidades de LazerEyes?</value>
  </data>
  <data name="QuestionThree" xml:space="preserve">
    <value>Que tipos de notificaciones recibire?</value>
  </data>
  <data name="QuestionTwo" xml:space="preserve">
    <value>Que tipos de alertas recibire?</value>
  </data>
  <data name="Scan" xml:space="preserve">
    <value>Exploración...</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Configuración</value>
  </data>
  <data name="Steps" xml:space="preserve">
    <value>Pasos</value>
  </data>
  <data name="StrideL" xml:space="preserve">
    <value>Longitud de Zancada</value>
  </data>
  <data name="DistInStrides" xml:space="preserve">
    <value>Medir la distancia en pasos</value>
  </data>
  <data name="Units" xml:space="preserve">
    <value>Unidades</value>
  </data>
  <data name="Vibration" xml:space="preserve">
    <value>Vibración</value>
  </data>
  <data name="Volume" xml:space="preserve">
    <value>Volumen</value>
  </data>
  <data name="Warnings" xml:space="preserve">
    <value>Advertencia</value>
  </data>
</root>